prototype(Beheist.NW:ProductTable) < prototype(Neos.Neos:Content) {
    templatePath = 'resource://Beheist.NW/Private/Templates/NodeTypes/ProductTable.html'
	sectionName = 'table'
	attributes.class = 'producttable'

    // INTERNAL
    headerRow = Beheist.NW:ProductTableHeaderRow
	@context.productsSource = ${q(node).property('productsSource')}
	products = Neos.Fusion:Case {
		childproducts {
			condition = ${productsSource == 'childproducts'}
			renderer = Neos.Fusion:Collection {
				itemName = 'product'
				itemRenderer = Beheist.NW:ProductTableRow
				collection = ${q(documentNode).children('[instanceof Beheist.NW:Product]').sort('totalGrade', 'DESC')}
			}
		}
		allproducts {
			condition = ${productsSource == 'allproducts'}
			renderer = Neos.Fusion:Collection {
				itemName = 'product'
				itemRenderer = Beheist.NW:ProductTableRow
				collection = ${q(site).find('[instanceof Beheist.NW:Product]').sort('totalGrade', 'DESC')}
			}
		}
		selectedproducts {
			condition = ${productsSource == 'selectedproducts'}
			renderer = Neos.Fusion:Collection {
				itemName = 'product'
				itemRenderer = Beheist.NW:ProductTableRow
				collection = ${q(q(node).property('products')).sort('totalGrade', 'DESC')}
			}
		}
	}

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${node}
			editPreviewMode = ${node.context.currentRenderingMode.name}
		}
		entryTags {
			1 = ${'Node_' + node.identifier}
			2 = ${'NodeType_Beheist.NW:Product'}
		}
	}
}
prototype(Beheist.NW:ProductTableHeaderRow) < prototype(Neos.Fusion:Template) {
    // API
    templatePath = 'resource://Beheist.NW/Private/Templates/NodeTypes/ProductTable.html'
    sectionName = 'headerRow'
}

prototype(Beheist.NW:ProductTableRow) < prototype(Neos.Fusion:Template) {
    // API
	templatePath = 'resource://Beheist.NW/Private/Templates/NodeTypes/ProductTable.html'
	sectionName = 'row'

    // INTERNAL
	product = ${product}
    productData = Beheist.NW:ProductDataExtractor
    productRating = Beheist.NW:ProductRating

	@cache {
		mode = 'cached'
		entryIdentifier {
			node = ${product}
			editPreviewMode = ${node.context.currentRenderingMode.name}
		}
		entryTags {
			1 = ${'Node_' + product.identifier}
			2 = ${'DescendantOf_' + product.identifier}
		}
	}
}
